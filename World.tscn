[gd_scene load_steps=20 format=3 uid="uid://crstna6wto6j3"]

[ext_resource type="PackedScene" uid="uid://278gt12580yi" path="res://player/HunterGodot.tscn" id="1"]
[ext_resource type="Material" uid="uid://bch8jjmrr4qnw" path="res://mat/CobleStones.material" id="2"]
[ext_resource type="Material" uid="uid://dy7lsy567vx3j" path="res://mat/Pilars.material" id="3"]

[sub_resource type="AnimationNodeStateMachinePlayback" id="AnimationNodeStateMachinePlayback_wah1s"]

[sub_resource type="CameraEffects" id="CameraEffects_rgh32"]
dof_blur_far_enabled = true
dof_blur_far_distance = 6.35
dof_blur_far_transition = 119.88
override_exposure = 1.21

[sub_resource type="ProceduralSkyMaterial" id="ProceduralSkyMaterial_hulul"]
sky_top_color = Color(0.286275, 0.25098, 0.262745, 1)
sky_horizon_color = Color(0.864831, 0.576034, 0.336757, 1)
sky_curve = 0.15529
ground_bottom_color = Color(0.0941176, 0.258824, 0.4, 1)
ground_horizon_color = Color(0.80076, 0.635551, 0.488784, 1)
sun_angle_max = 39.71
sun_curve = 0.139955

[sub_resource type="Sky" id="Sky_n1da0"]
sky_material = SubResource("ProceduralSkyMaterial_hulul")

[sub_resource type="Environment" id="Environment_jd42k"]
background_mode = 2
sky = SubResource("Sky_n1da0")
ssr_fade_in = 0.0549032
ssao_intensity = 4.77
ssil_intensity = 2.49
sdfgi_enabled = true
sdfgi_use_occlusion = true
sdfgi_bounce_feedback = 0.65
fog_enabled = true
fog_light_color = Color(0.709804, 0.537255, 0.568627, 1)
fog_sun_scatter = 1.0
fog_density = 0.002
volumetric_fog_enabled = true
volumetric_fog_density = 0.01
volumetric_fog_anisotropy = 0.9
volumetric_fog_length = 70.83

[sub_resource type="CylinderMesh" id="3"]
material = ExtResource("3")
radial_segments = 8

[sub_resource type="CylinderMesh" id="10"]
material = ExtResource("3")
height = 3.0
radial_segments = 8

[sub_resource type="ConcavePolygonShape3D" id="ConcavePolygonShape3D_gyltu"]
data = PackedVector3Array(0, 1.5, 0.5, 0.3536, 1.5, 0.3536, 0, 0.9, 0.5, 0.3536, 1.5, 0.3536, 0.3536, 0.9, 0.3536, 0, 0.9, 0.5, 0.3536, 1.5, 0.3536, 0.5, 1.5, 0, 0.3536, 0.9, 0.3536, 0.5, 1.5, 0, 0.5, 0.9, 0, 0.3536, 0.9, 0.3536, 0.5, 1.5, 0, 0.3536, 1.5, -0.3536, 0.5, 0.9, 0, 0.3536, 1.5, -0.3536, 0.3536, 0.9, -0.3536, 0.5, 0.9, 0, 0.3536, 1.5, -0.3536, 0, 1.5, -0.5, 0.3536, 0.9, -0.3536, 0, 1.5, -0.5, 0, 0.9, -0.5, 0.3536, 0.9, -0.3536, 0, 1.5, -0.5, -0.3536, 1.5, -0.3536, 0, 0.9, -0.5, -0.3536, 1.5, -0.3536, -0.3536, 0.9, -0.3536, 0, 0.9, -0.5, -0.3536, 1.5, -0.3536, -0.5, 1.5, 0, -0.3536, 0.9, -0.3536, -0.5, 1.5, 0, -0.5, 0.9, 0, -0.3536, 0.9, -0.3536, -0.5, 1.5, 0, -0.3536, 1.5, 0.3536, -0.5, 0.9, 0, -0.3536, 1.5, 0.3536, -0.3536, 0.9, 0.3536, -0.5, 0.9, 0, -0.3536, 1.5, 0.3536, 0, 1.5, 0.5, -0.3536, 0.9, 0.3536, 0, 1.5, 0.5, 0, 0.9, 0.5, -0.3536, 0.9, 0.3536, 0, 0.9, 0.5, 0.3536, 0.9, 0.3536, 0, 0.3, 0.5, 0.3536, 0.9, 0.3536, 0.3536, 0.3, 0.3536, 0, 0.3, 0.5, 0.3536, 0.9, 0.3536, 0.5, 0.9, 0, 0.3536, 0.3, 0.3536, 0.5, 0.9, 0, 0.5, 0.3, 0, 0.3536, 0.3, 0.3536, 0.5, 0.9, 0, 0.3536, 0.9, -0.3536, 0.5, 0.3, 0, 0.3536, 0.9, -0.3536, 0.3536, 0.3, -0.3536, 0.5, 0.3, 0, 0.3536, 0.9, -0.3536, 0, 0.9, -0.5, 0.3536, 0.3, -0.3536, 0, 0.9, -0.5, 0, 0.3, -0.5, 0.3536, 0.3, -0.3536, 0, 0.9, -0.5, -0.3536, 0.9, -0.3536, 0, 0.3, -0.5, -0.3536, 0.9, -0.3536, -0.3536, 0.3, -0.3536, 0, 0.3, -0.5, -0.3536, 0.9, -0.3536, -0.5, 0.9, 0, -0.3536, 0.3, -0.3536, -0.5, 0.9, 0, -0.5, 0.3, 0, -0.3536, 0.3, -0.3536, -0.5, 0.9, 0, -0.3536, 0.9, 0.3536, -0.5, 0.3, 0, -0.3536, 0.9, 0.3536, -0.3536, 0.3, 0.3536, -0.5, 0.3, 0, -0.3536, 0.9, 0.3536, 0, 0.9, 0.5, -0.3536, 0.3, 0.3536, 0, 0.9, 0.5, 0, 0.3, 0.5, -0.3536, 0.3, 0.3536, 0, 0.3, 0.5, 0.3536, 0.3, 0.3536, 0, -0.3, 0.5, 0.3536, 0.3, 0.3536, 0.3536, -0.3, 0.3536, 0, -0.3, 0.5, 0.3536, 0.3, 0.3536, 0.5, 0.3, 0, 0.3536, -0.3, 0.3536, 0.5, 0.3, 0, 0.5, -0.3, 0, 0.3536, -0.3, 0.3536, 0.5, 0.3, 0, 0.3536, 0.3, -0.3536, 0.5, -0.3, 0, 0.3536, 0.3, -0.3536, 0.3536, -0.3, -0.3536, 0.5, -0.3, 0, 0.3536, 0.3, -0.3536, 0, 0.3, -0.5, 0.3536, -0.3, -0.3536, 0, 0.3, -0.5, 0, -0.3, -0.5, 0.3536, -0.3, -0.3536, 0, 0.3, -0.5, -0.3536, 0.3, -0.3536, 0, -0.3, -0.5, -0.3536, 0.3, -0.3536, -0.3536, -0.3, -0.3536, 0, -0.3, -0.5, -0.3536, 0.3, -0.3536, -0.5, 0.3, 0, -0.3536, -0.3, -0.3536, -0.5, 0.3, 0, -0.5, -0.3, 0, -0.3536, -0.3, -0.3536, -0.5, 0.3, 0, -0.3536, 0.3, 0.3536, -0.5, -0.3, 0, -0.3536, 0.3, 0.3536, -0.3536, -0.3, 0.3536, -0.5, -0.3, 0, -0.3536, 0.3, 0.3536, 0, 0.3, 0.5, -0.3536, -0.3, 0.3536, 0, 0.3, 0.5, 0, -0.3, 0.5, -0.3536, -0.3, 0.3536, 0, -0.3, 0.5, 0.3536, -0.3, 0.3536, 0, -0.9, 0.5, 0.3536, -0.3, 0.3536, 0.3536, -0.9, 0.3536, 0, -0.9, 0.5, 0.3536, -0.3, 0.3536, 0.5, -0.3, 0, 0.3536, -0.9, 0.3536, 0.5, -0.3, 0, 0.5, -0.9, 0, 0.3536, -0.9, 0.3536, 0.5, -0.3, 0, 0.3536, -0.3, -0.3536, 0.5, -0.9, 0, 0.3536, -0.3, -0.3536, 0.3536, -0.9, -0.3536, 0.5, -0.9, 0, 0.3536, -0.3, -0.3536, 0, -0.3, -0.5, 0.3536, -0.9, -0.3536, 0, -0.3, -0.5, 0, -0.9, -0.5, 0.3536, -0.9, -0.3536, 0, -0.3, -0.5, -0.3536, -0.3, -0.3536, 0, -0.9, -0.5, -0.3536, -0.3, -0.3536, -0.3536, -0.9, -0.3536, 0, -0.9, -0.5, -0.3536, -0.3, -0.3536, -0.5, -0.3, 0, -0.3536, -0.9, -0.3536, -0.5, -0.3, 0, -0.5, -0.9, 0, -0.3536, -0.9, -0.3536, -0.5, -0.3, 0, -0.3536, -0.3, 0.3536, -0.5, -0.9, 0, -0.3536, -0.3, 0.3536, -0.3536, -0.9, 0.3536, -0.5, -0.9, 0, -0.3536, -0.3, 0.3536, 0, -0.3, 0.5, -0.3536, -0.9, 0.3536, 0, -0.3, 0.5, 0, -0.9, 0.5, -0.3536, -0.9, 0.3536, 0, -0.9, 0.5, 0.3536, -0.9, 0.3536, 0, -1.5, 0.5, 0.3536, -0.9, 0.3536, 0.3536, -1.5, 0.3536, 0, -1.5, 0.5, 0.3536, -0.9, 0.3536, 0.5, -0.9, 0, 0.3536, -1.5, 0.3536, 0.5, -0.9, 0, 0.5, -1.5, 0, 0.3536, -1.5, 0.3536, 0.5, -0.9, 0, 0.3536, -0.9, -0.3536, 0.5, -1.5, 0, 0.3536, -0.9, -0.3536, 0.3536, -1.5, -0.3536, 0.5, -1.5, 0, 0.3536, -0.9, -0.3536, 0, -0.9, -0.5, 0.3536, -1.5, -0.3536, 0, -0.9, -0.5, 0, -1.5, -0.5, 0.3536, -1.5, -0.3536, 0, -0.9, -0.5, -0.3536, -0.9, -0.3536, 0, -1.5, -0.5, -0.3536, -0.9, -0.3536, -0.3536, -1.5, -0.3536, 0, -1.5, -0.5, -0.3536, -0.9, -0.3536, -0.5, -0.9, 0, -0.3536, -1.5, -0.3536, -0.5, -0.9, 0, -0.5, -1.5, 0, -0.3536, -1.5, -0.3536, -0.5, -0.9, 0, -0.3536, -0.9, 0.3536, -0.5, -1.5, 0, -0.3536, -0.9, 0.3536, -0.3536, -1.5, 0.3536, -0.5, -1.5, 0, -0.3536, -0.9, 0.3536, 0, -0.9, 0.5, -0.3536, -1.5, 0.3536, 0, -0.9, 0.5, 0, -1.5, 0.5, -0.3536, -1.5, 0.3536, 0, 1.5, 0, 0.3536, 1.5, 0.3536, 0, 1.5, 0.5, 0, 1.5, 0, 0.5, 1.5, 0, 0.3536, 1.5, 0.3536, 0, 1.5, 0, 0.3536, 1.5, -0.3536, 0.5, 1.5, 0, 0, 1.5, 0, 0, 1.5, -0.5, 0.3536, 1.5, -0.3536, 0, 1.5, 0, -0.3536, 1.5, -0.3536, 0, 1.5, -0.5, 0, 1.5, 0, -0.5, 1.5, 0, -0.3536, 1.5, -0.3536, 0, 1.5, 0, -0.3536, 1.5, 0.3536, -0.5, 1.5, 0, 0, 1.5, 0, 0, 1.5, 0.5, -0.3536, 1.5, 0.3536, 0, -1.5, 0, 0, -1.5, 0.5, 0.3536, -1.5, 0.3536, 0, -1.5, 0, 0.3536, -1.5, 0.3536, 0.5, -1.5, 0, 0, -1.5, 0, 0.5, -1.5, 0, 0.3536, -1.5, -0.3536, 0, -1.5, 0, 0.3536, -1.5, -0.3536, 0, -1.5, -0.5, 0, -1.5, 0, 0, -1.5, -0.5, -0.3536, -1.5, -0.3536, 0, -1.5, 0, -0.3536, -1.5, -0.3536, -0.5, -1.5, 0, 0, -1.5, 0, -0.5, -1.5, 0, -0.3536, -1.5, 0.3536, 0, -1.5, 0, -0.3536, -1.5, 0.3536, 0, -1.5, 0.5)

[sub_resource type="CylinderMesh" id="15"]
material = ExtResource("3")
height = 5.0
radial_segments = 8

[sub_resource type="ConcavePolygonShape3D" id="ConcavePolygonShape3D_t2hng"]
data = PackedVector3Array(0, 2.5, 0.5, 0.3536, 2.5, 0.3536, 0, 1.5, 0.5, 0.3536, 2.5, 0.3536, 0.3536, 1.5, 0.3536, 0, 1.5, 0.5, 0.3536, 2.5, 0.3536, 0.5, 2.5, 0, 0.3536, 1.5, 0.3536, 0.5, 2.5, 0, 0.5, 1.5, 0, 0.3536, 1.5, 0.3536, 0.5, 2.5, 0, 0.3536, 2.5, -0.3536, 0.5, 1.5, 0, 0.3536, 2.5, -0.3536, 0.3536, 1.5, -0.3536, 0.5, 1.5, 0, 0.3536, 2.5, -0.3536, 0, 2.5, -0.5, 0.3536, 1.5, -0.3536, 0, 2.5, -0.5, 0, 1.5, -0.5, 0.3536, 1.5, -0.3536, 0, 2.5, -0.5, -0.3536, 2.5, -0.3536, 0, 1.5, -0.5, -0.3536, 2.5, -0.3536, -0.3536, 1.5, -0.3536, 0, 1.5, -0.5, -0.3536, 2.5, -0.3536, -0.5, 2.5, 0, -0.3536, 1.5, -0.3536, -0.5, 2.5, 0, -0.5, 1.5, 0, -0.3536, 1.5, -0.3536, -0.5, 2.5, 0, -0.3536, 2.5, 0.3536, -0.5, 1.5, 0, -0.3536, 2.5, 0.3536, -0.3536, 1.5, 0.3536, -0.5, 1.5, 0, -0.3536, 2.5, 0.3536, 0, 2.5, 0.5, -0.3536, 1.5, 0.3536, 0, 2.5, 0.5, 0, 1.5, 0.5, -0.3536, 1.5, 0.3536, 0, 1.5, 0.5, 0.3536, 1.5, 0.3536, 0, 0.5, 0.5, 0.3536, 1.5, 0.3536, 0.3536, 0.5, 0.3536, 0, 0.5, 0.5, 0.3536, 1.5, 0.3536, 0.5, 1.5, 0, 0.3536, 0.5, 0.3536, 0.5, 1.5, 0, 0.5, 0.5, 0, 0.3536, 0.5, 0.3536, 0.5, 1.5, 0, 0.3536, 1.5, -0.3536, 0.5, 0.5, 0, 0.3536, 1.5, -0.3536, 0.3536, 0.5, -0.3536, 0.5, 0.5, 0, 0.3536, 1.5, -0.3536, 0, 1.5, -0.5, 0.3536, 0.5, -0.3536, 0, 1.5, -0.5, 0, 0.5, -0.5, 0.3536, 0.5, -0.3536, 0, 1.5, -0.5, -0.3536, 1.5, -0.3536, 0, 0.5, -0.5, -0.3536, 1.5, -0.3536, -0.3536, 0.5, -0.3536, 0, 0.5, -0.5, -0.3536, 1.5, -0.3536, -0.5, 1.5, 0, -0.3536, 0.5, -0.3536, -0.5, 1.5, 0, -0.5, 0.5, 0, -0.3536, 0.5, -0.3536, -0.5, 1.5, 0, -0.3536, 1.5, 0.3536, -0.5, 0.5, 0, -0.3536, 1.5, 0.3536, -0.3536, 0.5, 0.3536, -0.5, 0.5, 0, -0.3536, 1.5, 0.3536, 0, 1.5, 0.5, -0.3536, 0.5, 0.3536, 0, 1.5, 0.5, 0, 0.5, 0.5, -0.3536, 0.5, 0.3536, 0, 0.5, 0.5, 0.3536, 0.5, 0.3536, 0, -0.5, 0.5, 0.3536, 0.5, 0.3536, 0.3536, -0.5, 0.3536, 0, -0.5, 0.5, 0.3536, 0.5, 0.3536, 0.5, 0.5, 0, 0.3536, -0.5, 0.3536, 0.5, 0.5, 0, 0.5, -0.5, 0, 0.3536, -0.5, 0.3536, 0.5, 0.5, 0, 0.3536, 0.5, -0.3536, 0.5, -0.5, 0, 0.3536, 0.5, -0.3536, 0.3536, -0.5, -0.3536, 0.5, -0.5, 0, 0.3536, 0.5, -0.3536, 0, 0.5, -0.5, 0.3536, -0.5, -0.3536, 0, 0.5, -0.5, 0, -0.5, -0.5, 0.3536, -0.5, -0.3536, 0, 0.5, -0.5, -0.3536, 0.5, -0.3536, 0, -0.5, -0.5, -0.3536, 0.5, -0.3536, -0.3536, -0.5, -0.3536, 0, -0.5, -0.5, -0.3536, 0.5, -0.3536, -0.5, 0.5, 0, -0.3536, -0.5, -0.3536, -0.5, 0.5, 0, -0.5, -0.5, 0, -0.3536, -0.5, -0.3536, -0.5, 0.5, 0, -0.3536, 0.5, 0.3536, -0.5, -0.5, 0, -0.3536, 0.5, 0.3536, -0.3536, -0.5, 0.3536, -0.5, -0.5, 0, -0.3536, 0.5, 0.3536, 0, 0.5, 0.5, -0.3536, -0.5, 0.3536, 0, 0.5, 0.5, 0, -0.5, 0.5, -0.3536, -0.5, 0.3536, 0, -0.5, 0.5, 0.3536, -0.5, 0.3536, 0, -1.5, 0.5, 0.3536, -0.5, 0.3536, 0.3536, -1.5, 0.3536, 0, -1.5, 0.5, 0.3536, -0.5, 0.3536, 0.5, -0.5, 0, 0.3536, -1.5, 0.3536, 0.5, -0.5, 0, 0.5, -1.5, 0, 0.3536, -1.5, 0.3536, 0.5, -0.5, 0, 0.3536, -0.5, -0.3536, 0.5, -1.5, 0, 0.3536, -0.5, -0.3536, 0.3536, -1.5, -0.3536, 0.5, -1.5, 0, 0.3536, -0.5, -0.3536, 0, -0.5, -0.5, 0.3536, -1.5, -0.3536, 0, -0.5, -0.5, 0, -1.5, -0.5, 0.3536, -1.5, -0.3536, 0, -0.5, -0.5, -0.3536, -0.5, -0.3536, 0, -1.5, -0.5, -0.3536, -0.5, -0.3536, -0.3536, -1.5, -0.3536, 0, -1.5, -0.5, -0.3536, -0.5, -0.3536, -0.5, -0.5, 0, -0.3536, -1.5, -0.3536, -0.5, -0.5, 0, -0.5, -1.5, 0, -0.3536, -1.5, -0.3536, -0.5, -0.5, 0, -0.3536, -0.5, 0.3536, -0.5, -1.5, 0, -0.3536, -0.5, 0.3536, -0.3536, -1.5, 0.3536, -0.5, -1.5, 0, -0.3536, -0.5, 0.3536, 0, -0.5, 0.5, -0.3536, -1.5, 0.3536, 0, -0.5, 0.5, 0, -1.5, 0.5, -0.3536, -1.5, 0.3536, 0, -1.5, 0.5, 0.3536, -1.5, 0.3536, 0, -2.5, 0.5, 0.3536, -1.5, 0.3536, 0.3536, -2.5, 0.3536, 0, -2.5, 0.5, 0.3536, -1.5, 0.3536, 0.5, -1.5, 0, 0.3536, -2.5, 0.3536, 0.5, -1.5, 0, 0.5, -2.5, 0, 0.3536, -2.5, 0.3536, 0.5, -1.5, 0, 0.3536, -1.5, -0.3536, 0.5, -2.5, 0, 0.3536, -1.5, -0.3536, 0.3536, -2.5, -0.3536, 0.5, -2.5, 0, 0.3536, -1.5, -0.3536, 0, -1.5, -0.5, 0.3536, -2.5, -0.3536, 0, -1.5, -0.5, 0, -2.5, -0.5, 0.3536, -2.5, -0.3536, 0, -1.5, -0.5, -0.3536, -1.5, -0.3536, 0, -2.5, -0.5, -0.3536, -1.5, -0.3536, -0.3536, -2.5, -0.3536, 0, -2.5, -0.5, -0.3536, -1.5, -0.3536, -0.5, -1.5, 0, -0.3536, -2.5, -0.3536, -0.5, -1.5, 0, -0.5, -2.5, 0, -0.3536, -2.5, -0.3536, -0.5, -1.5, 0, -0.3536, -1.5, 0.3536, -0.5, -2.5, 0, -0.3536, -1.5, 0.3536, -0.3536, -2.5, 0.3536, -0.5, -2.5, 0, -0.3536, -1.5, 0.3536, 0, -1.5, 0.5, -0.3536, -2.5, 0.3536, 0, -1.5, 0.5, 0, -2.5, 0.5, -0.3536, -2.5, 0.3536, 0, 2.5, 0, 0.3536, 2.5, 0.3536, 0, 2.5, 0.5, 0, 2.5, 0, 0.5, 2.5, 0, 0.3536, 2.5, 0.3536, 0, 2.5, 0, 0.3536, 2.5, -0.3536, 0.5, 2.5, 0, 0, 2.5, 0, 0, 2.5, -0.5, 0.3536, 2.5, -0.3536, 0, 2.5, 0, -0.3536, 2.5, -0.3536, 0, 2.5, -0.5, 0, 2.5, 0, -0.5, 2.5, 0, -0.3536, 2.5, -0.3536, 0, 2.5, 0, -0.3536, 2.5, 0.3536, -0.5, 2.5, 0, 0, 2.5, 0, 0, 2.5, 0.5, -0.3536, 2.5, 0.3536, 0, -2.5, 0, 0, -2.5, 0.5, 0.3536, -2.5, 0.3536, 0, -2.5, 0, 0.3536, -2.5, 0.3536, 0.5, -2.5, 0, 0, -2.5, 0, 0.5, -2.5, 0, 0.3536, -2.5, -0.3536, 0, -2.5, 0, 0.3536, -2.5, -0.3536, 0, -2.5, -0.5, 0, -2.5, 0, 0, -2.5, -0.5, -0.3536, -2.5, -0.3536, 0, -2.5, 0, -0.3536, -2.5, -0.3536, -0.5, -2.5, 0, 0, -2.5, 0, -0.5, -2.5, 0, -0.3536, -2.5, 0.3536, 0, -2.5, 0, -0.3536, -2.5, 0.3536, 0, -2.5, 0.5)

[sub_resource type="ConcavePolygonShape3D" id="ConcavePolygonShape3D_1l8u4"]
data = PackedVector3Array(0, 1.5, 0.5, 0.3536, 1.5, 0.3536, 0, 0.9, 0.5, 0.3536, 1.5, 0.3536, 0.3536, 0.9, 0.3536, 0, 0.9, 0.5, 0.3536, 1.5, 0.3536, 0.5, 1.5, 0, 0.3536, 0.9, 0.3536, 0.5, 1.5, 0, 0.5, 0.9, 0, 0.3536, 0.9, 0.3536, 0.5, 1.5, 0, 0.3536, 1.5, -0.3536, 0.5, 0.9, 0, 0.3536, 1.5, -0.3536, 0.3536, 0.9, -0.3536, 0.5, 0.9, 0, 0.3536, 1.5, -0.3536, 0, 1.5, -0.5, 0.3536, 0.9, -0.3536, 0, 1.5, -0.5, 0, 0.9, -0.5, 0.3536, 0.9, -0.3536, 0, 1.5, -0.5, -0.3536, 1.5, -0.3536, 0, 0.9, -0.5, -0.3536, 1.5, -0.3536, -0.3536, 0.9, -0.3536, 0, 0.9, -0.5, -0.3536, 1.5, -0.3536, -0.5, 1.5, 0, -0.3536, 0.9, -0.3536, -0.5, 1.5, 0, -0.5, 0.9, 0, -0.3536, 0.9, -0.3536, -0.5, 1.5, 0, -0.3536, 1.5, 0.3536, -0.5, 0.9, 0, -0.3536, 1.5, 0.3536, -0.3536, 0.9, 0.3536, -0.5, 0.9, 0, -0.3536, 1.5, 0.3536, 0, 1.5, 0.5, -0.3536, 0.9, 0.3536, 0, 1.5, 0.5, 0, 0.9, 0.5, -0.3536, 0.9, 0.3536, 0, 0.9, 0.5, 0.3536, 0.9, 0.3536, 0, 0.3, 0.5, 0.3536, 0.9, 0.3536, 0.3536, 0.3, 0.3536, 0, 0.3, 0.5, 0.3536, 0.9, 0.3536, 0.5, 0.9, 0, 0.3536, 0.3, 0.3536, 0.5, 0.9, 0, 0.5, 0.3, 0, 0.3536, 0.3, 0.3536, 0.5, 0.9, 0, 0.3536, 0.9, -0.3536, 0.5, 0.3, 0, 0.3536, 0.9, -0.3536, 0.3536, 0.3, -0.3536, 0.5, 0.3, 0, 0.3536, 0.9, -0.3536, 0, 0.9, -0.5, 0.3536, 0.3, -0.3536, 0, 0.9, -0.5, 0, 0.3, -0.5, 0.3536, 0.3, -0.3536, 0, 0.9, -0.5, -0.3536, 0.9, -0.3536, 0, 0.3, -0.5, -0.3536, 0.9, -0.3536, -0.3536, 0.3, -0.3536, 0, 0.3, -0.5, -0.3536, 0.9, -0.3536, -0.5, 0.9, 0, -0.3536, 0.3, -0.3536, -0.5, 0.9, 0, -0.5, 0.3, 0, -0.3536, 0.3, -0.3536, -0.5, 0.9, 0, -0.3536, 0.9, 0.3536, -0.5, 0.3, 0, -0.3536, 0.9, 0.3536, -0.3536, 0.3, 0.3536, -0.5, 0.3, 0, -0.3536, 0.9, 0.3536, 0, 0.9, 0.5, -0.3536, 0.3, 0.3536, 0, 0.9, 0.5, 0, 0.3, 0.5, -0.3536, 0.3, 0.3536, 0, 0.3, 0.5, 0.3536, 0.3, 0.3536, 0, -0.3, 0.5, 0.3536, 0.3, 0.3536, 0.3536, -0.3, 0.3536, 0, -0.3, 0.5, 0.3536, 0.3, 0.3536, 0.5, 0.3, 0, 0.3536, -0.3, 0.3536, 0.5, 0.3, 0, 0.5, -0.3, 0, 0.3536, -0.3, 0.3536, 0.5, 0.3, 0, 0.3536, 0.3, -0.3536, 0.5, -0.3, 0, 0.3536, 0.3, -0.3536, 0.3536, -0.3, -0.3536, 0.5, -0.3, 0, 0.3536, 0.3, -0.3536, 0, 0.3, -0.5, 0.3536, -0.3, -0.3536, 0, 0.3, -0.5, 0, -0.3, -0.5, 0.3536, -0.3, -0.3536, 0, 0.3, -0.5, -0.3536, 0.3, -0.3536, 0, -0.3, -0.5, -0.3536, 0.3, -0.3536, -0.3536, -0.3, -0.3536, 0, -0.3, -0.5, -0.3536, 0.3, -0.3536, -0.5, 0.3, 0, -0.3536, -0.3, -0.3536, -0.5, 0.3, 0, -0.5, -0.3, 0, -0.3536, -0.3, -0.3536, -0.5, 0.3, 0, -0.3536, 0.3, 0.3536, -0.5, -0.3, 0, -0.3536, 0.3, 0.3536, -0.3536, -0.3, 0.3536, -0.5, -0.3, 0, -0.3536, 0.3, 0.3536, 0, 0.3, 0.5, -0.3536, -0.3, 0.3536, 0, 0.3, 0.5, 0, -0.3, 0.5, -0.3536, -0.3, 0.3536, 0, -0.3, 0.5, 0.3536, -0.3, 0.3536, 0, -0.9, 0.5, 0.3536, -0.3, 0.3536, 0.3536, -0.9, 0.3536, 0, -0.9, 0.5, 0.3536, -0.3, 0.3536, 0.5, -0.3, 0, 0.3536, -0.9, 0.3536, 0.5, -0.3, 0, 0.5, -0.9, 0, 0.3536, -0.9, 0.3536, 0.5, -0.3, 0, 0.3536, -0.3, -0.3536, 0.5, -0.9, 0, 0.3536, -0.3, -0.3536, 0.3536, -0.9, -0.3536, 0.5, -0.9, 0, 0.3536, -0.3, -0.3536, 0, -0.3, -0.5, 0.3536, -0.9, -0.3536, 0, -0.3, -0.5, 0, -0.9, -0.5, 0.3536, -0.9, -0.3536, 0, -0.3, -0.5, -0.3536, -0.3, -0.3536, 0, -0.9, -0.5, -0.3536, -0.3, -0.3536, -0.3536, -0.9, -0.3536, 0, -0.9, -0.5, -0.3536, -0.3, -0.3536, -0.5, -0.3, 0, -0.3536, -0.9, -0.3536, -0.5, -0.3, 0, -0.5, -0.9, 0, -0.3536, -0.9, -0.3536, -0.5, -0.3, 0, -0.3536, -0.3, 0.3536, -0.5, -0.9, 0, -0.3536, -0.3, 0.3536, -0.3536, -0.9, 0.3536, -0.5, -0.9, 0, -0.3536, -0.3, 0.3536, 0, -0.3, 0.5, -0.3536, -0.9, 0.3536, 0, -0.3, 0.5, 0, -0.9, 0.5, -0.3536, -0.9, 0.3536, 0, -0.9, 0.5, 0.3536, -0.9, 0.3536, 0, -1.5, 0.5, 0.3536, -0.9, 0.3536, 0.3536, -1.5, 0.3536, 0, -1.5, 0.5, 0.3536, -0.9, 0.3536, 0.5, -0.9, 0, 0.3536, -1.5, 0.3536, 0.5, -0.9, 0, 0.5, -1.5, 0, 0.3536, -1.5, 0.3536, 0.5, -0.9, 0, 0.3536, -0.9, -0.3536, 0.5, -1.5, 0, 0.3536, -0.9, -0.3536, 0.3536, -1.5, -0.3536, 0.5, -1.5, 0, 0.3536, -0.9, -0.3536, 0, -0.9, -0.5, 0.3536, -1.5, -0.3536, 0, -0.9, -0.5, 0, -1.5, -0.5, 0.3536, -1.5, -0.3536, 0, -0.9, -0.5, -0.3536, -0.9, -0.3536, 0, -1.5, -0.5, -0.3536, -0.9, -0.3536, -0.3536, -1.5, -0.3536, 0, -1.5, -0.5, -0.3536, -0.9, -0.3536, -0.5, -0.9, 0, -0.3536, -1.5, -0.3536, -0.5, -0.9, 0, -0.5, -1.5, 0, -0.3536, -1.5, -0.3536, -0.5, -0.9, 0, -0.3536, -0.9, 0.3536, -0.5, -1.5, 0, -0.3536, -0.9, 0.3536, -0.3536, -1.5, 0.3536, -0.5, -1.5, 0, -0.3536, -0.9, 0.3536, 0, -0.9, 0.5, -0.3536, -1.5, 0.3536, 0, -0.9, 0.5, 0, -1.5, 0.5, -0.3536, -1.5, 0.3536, 0, 1.5, 0, 0.3536, 1.5, 0.3536, 0, 1.5, 0.5, 0, 1.5, 0, 0.5, 1.5, 0, 0.3536, 1.5, 0.3536, 0, 1.5, 0, 0.3536, 1.5, -0.3536, 0.5, 1.5, 0, 0, 1.5, 0, 0, 1.5, -0.5, 0.3536, 1.5, -0.3536, 0, 1.5, 0, -0.3536, 1.5, -0.3536, 0, 1.5, -0.5, 0, 1.5, 0, -0.5, 1.5, 0, -0.3536, 1.5, -0.3536, 0, 1.5, 0, -0.3536, 1.5, 0.3536, -0.5, 1.5, 0, 0, 1.5, 0, 0, 1.5, 0.5, -0.3536, 1.5, 0.3536, 0, -1.5, 0, 0, -1.5, 0.5, 0.3536, -1.5, 0.3536, 0, -1.5, 0, 0.3536, -1.5, 0.3536, 0.5, -1.5, 0, 0, -1.5, 0, 0.5, -1.5, 0, 0.3536, -1.5, -0.3536, 0, -1.5, 0, 0.3536, -1.5, -0.3536, 0, -1.5, -0.5, 0, -1.5, 0, 0, -1.5, -0.5, -0.3536, -1.5, -0.3536, 0, -1.5, 0, -0.3536, -1.5, -0.3536, -0.5, -1.5, 0, 0, -1.5, 0, -0.5, -1.5, 0, -0.3536, -1.5, 0.3536, 0, -1.5, 0, -0.3536, -1.5, 0.3536, 0, -1.5, 0.5)

[sub_resource type="ConcavePolygonShape3D" id="ConcavePolygonShape3D_t1rws"]
data = PackedVector3Array(0, 1.5, 0.5, 0.3536, 1.5, 0.3536, 0, 0.9, 0.5, 0.3536, 1.5, 0.3536, 0.3536, 0.9, 0.3536, 0, 0.9, 0.5, 0.3536, 1.5, 0.3536, 0.5, 1.5, 0, 0.3536, 0.9, 0.3536, 0.5, 1.5, 0, 0.5, 0.9, 0, 0.3536, 0.9, 0.3536, 0.5, 1.5, 0, 0.3536, 1.5, -0.3536, 0.5, 0.9, 0, 0.3536, 1.5, -0.3536, 0.3536, 0.9, -0.3536, 0.5, 0.9, 0, 0.3536, 1.5, -0.3536, 0, 1.5, -0.5, 0.3536, 0.9, -0.3536, 0, 1.5, -0.5, 0, 0.9, -0.5, 0.3536, 0.9, -0.3536, 0, 1.5, -0.5, -0.3536, 1.5, -0.3536, 0, 0.9, -0.5, -0.3536, 1.5, -0.3536, -0.3536, 0.9, -0.3536, 0, 0.9, -0.5, -0.3536, 1.5, -0.3536, -0.5, 1.5, 0, -0.3536, 0.9, -0.3536, -0.5, 1.5, 0, -0.5, 0.9, 0, -0.3536, 0.9, -0.3536, -0.5, 1.5, 0, -0.3536, 1.5, 0.3536, -0.5, 0.9, 0, -0.3536, 1.5, 0.3536, -0.3536, 0.9, 0.3536, -0.5, 0.9, 0, -0.3536, 1.5, 0.3536, 0, 1.5, 0.5, -0.3536, 0.9, 0.3536, 0, 1.5, 0.5, 0, 0.9, 0.5, -0.3536, 0.9, 0.3536, 0, 0.9, 0.5, 0.3536, 0.9, 0.3536, 0, 0.3, 0.5, 0.3536, 0.9, 0.3536, 0.3536, 0.3, 0.3536, 0, 0.3, 0.5, 0.3536, 0.9, 0.3536, 0.5, 0.9, 0, 0.3536, 0.3, 0.3536, 0.5, 0.9, 0, 0.5, 0.3, 0, 0.3536, 0.3, 0.3536, 0.5, 0.9, 0, 0.3536, 0.9, -0.3536, 0.5, 0.3, 0, 0.3536, 0.9, -0.3536, 0.3536, 0.3, -0.3536, 0.5, 0.3, 0, 0.3536, 0.9, -0.3536, 0, 0.9, -0.5, 0.3536, 0.3, -0.3536, 0, 0.9, -0.5, 0, 0.3, -0.5, 0.3536, 0.3, -0.3536, 0, 0.9, -0.5, -0.3536, 0.9, -0.3536, 0, 0.3, -0.5, -0.3536, 0.9, -0.3536, -0.3536, 0.3, -0.3536, 0, 0.3, -0.5, -0.3536, 0.9, -0.3536, -0.5, 0.9, 0, -0.3536, 0.3, -0.3536, -0.5, 0.9, 0, -0.5, 0.3, 0, -0.3536, 0.3, -0.3536, -0.5, 0.9, 0, -0.3536, 0.9, 0.3536, -0.5, 0.3, 0, -0.3536, 0.9, 0.3536, -0.3536, 0.3, 0.3536, -0.5, 0.3, 0, -0.3536, 0.9, 0.3536, 0, 0.9, 0.5, -0.3536, 0.3, 0.3536, 0, 0.9, 0.5, 0, 0.3, 0.5, -0.3536, 0.3, 0.3536, 0, 0.3, 0.5, 0.3536, 0.3, 0.3536, 0, -0.3, 0.5, 0.3536, 0.3, 0.3536, 0.3536, -0.3, 0.3536, 0, -0.3, 0.5, 0.3536, 0.3, 0.3536, 0.5, 0.3, 0, 0.3536, -0.3, 0.3536, 0.5, 0.3, 0, 0.5, -0.3, 0, 0.3536, -0.3, 0.3536, 0.5, 0.3, 0, 0.3536, 0.3, -0.3536, 0.5, -0.3, 0, 0.3536, 0.3, -0.3536, 0.3536, -0.3, -0.3536, 0.5, -0.3, 0, 0.3536, 0.3, -0.3536, 0, 0.3, -0.5, 0.3536, -0.3, -0.3536, 0, 0.3, -0.5, 0, -0.3, -0.5, 0.3536, -0.3, -0.3536, 0, 0.3, -0.5, -0.3536, 0.3, -0.3536, 0, -0.3, -0.5, -0.3536, 0.3, -0.3536, -0.3536, -0.3, -0.3536, 0, -0.3, -0.5, -0.3536, 0.3, -0.3536, -0.5, 0.3, 0, -0.3536, -0.3, -0.3536, -0.5, 0.3, 0, -0.5, -0.3, 0, -0.3536, -0.3, -0.3536, -0.5, 0.3, 0, -0.3536, 0.3, 0.3536, -0.5, -0.3, 0, -0.3536, 0.3, 0.3536, -0.3536, -0.3, 0.3536, -0.5, -0.3, 0, -0.3536, 0.3, 0.3536, 0, 0.3, 0.5, -0.3536, -0.3, 0.3536, 0, 0.3, 0.5, 0, -0.3, 0.5, -0.3536, -0.3, 0.3536, 0, -0.3, 0.5, 0.3536, -0.3, 0.3536, 0, -0.9, 0.5, 0.3536, -0.3, 0.3536, 0.3536, -0.9, 0.3536, 0, -0.9, 0.5, 0.3536, -0.3, 0.3536, 0.5, -0.3, 0, 0.3536, -0.9, 0.3536, 0.5, -0.3, 0, 0.5, -0.9, 0, 0.3536, -0.9, 0.3536, 0.5, -0.3, 0, 0.3536, -0.3, -0.3536, 0.5, -0.9, 0, 0.3536, -0.3, -0.3536, 0.3536, -0.9, -0.3536, 0.5, -0.9, 0, 0.3536, -0.3, -0.3536, 0, -0.3, -0.5, 0.3536, -0.9, -0.3536, 0, -0.3, -0.5, 0, -0.9, -0.5, 0.3536, -0.9, -0.3536, 0, -0.3, -0.5, -0.3536, -0.3, -0.3536, 0, -0.9, -0.5, -0.3536, -0.3, -0.3536, -0.3536, -0.9, -0.3536, 0, -0.9, -0.5, -0.3536, -0.3, -0.3536, -0.5, -0.3, 0, -0.3536, -0.9, -0.3536, -0.5, -0.3, 0, -0.5, -0.9, 0, -0.3536, -0.9, -0.3536, -0.5, -0.3, 0, -0.3536, -0.3, 0.3536, -0.5, -0.9, 0, -0.3536, -0.3, 0.3536, -0.3536, -0.9, 0.3536, -0.5, -0.9, 0, -0.3536, -0.3, 0.3536, 0, -0.3, 0.5, -0.3536, -0.9, 0.3536, 0, -0.3, 0.5, 0, -0.9, 0.5, -0.3536, -0.9, 0.3536, 0, -0.9, 0.5, 0.3536, -0.9, 0.3536, 0, -1.5, 0.5, 0.3536, -0.9, 0.3536, 0.3536, -1.5, 0.3536, 0, -1.5, 0.5, 0.3536, -0.9, 0.3536, 0.5, -0.9, 0, 0.3536, -1.5, 0.3536, 0.5, -0.9, 0, 0.5, -1.5, 0, 0.3536, -1.5, 0.3536, 0.5, -0.9, 0, 0.3536, -0.9, -0.3536, 0.5, -1.5, 0, 0.3536, -0.9, -0.3536, 0.3536, -1.5, -0.3536, 0.5, -1.5, 0, 0.3536, -0.9, -0.3536, 0, -0.9, -0.5, 0.3536, -1.5, -0.3536, 0, -0.9, -0.5, 0, -1.5, -0.5, 0.3536, -1.5, -0.3536, 0, -0.9, -0.5, -0.3536, -0.9, -0.3536, 0, -1.5, -0.5, -0.3536, -0.9, -0.3536, -0.3536, -1.5, -0.3536, 0, -1.5, -0.5, -0.3536, -0.9, -0.3536, -0.5, -0.9, 0, -0.3536, -1.5, -0.3536, -0.5, -0.9, 0, -0.5, -1.5, 0, -0.3536, -1.5, -0.3536, -0.5, -0.9, 0, -0.3536, -0.9, 0.3536, -0.5, -1.5, 0, -0.3536, -0.9, 0.3536, -0.3536, -1.5, 0.3536, -0.5, -1.5, 0, -0.3536, -0.9, 0.3536, 0, -0.9, 0.5, -0.3536, -1.5, 0.3536, 0, -0.9, 0.5, 0, -1.5, 0.5, -0.3536, -1.5, 0.3536, 0, 1.5, 0, 0.3536, 1.5, 0.3536, 0, 1.5, 0.5, 0, 1.5, 0, 0.5, 1.5, 0, 0.3536, 1.5, 0.3536, 0, 1.5, 0, 0.3536, 1.5, -0.3536, 0.5, 1.5, 0, 0, 1.5, 0, 0, 1.5, -0.5, 0.3536, 1.5, -0.3536, 0, 1.5, 0, -0.3536, 1.5, -0.3536, 0, 1.5, -0.5, 0, 1.5, 0, -0.5, 1.5, 0, -0.3536, 1.5, -0.3536, 0, 1.5, 0, -0.3536, 1.5, 0.3536, -0.5, 1.5, 0, 0, 1.5, 0, 0, 1.5, 0.5, -0.3536, 1.5, 0.3536, 0, -1.5, 0, 0, -1.5, 0.5, 0.3536, -1.5, 0.3536, 0, -1.5, 0, 0.3536, -1.5, 0.3536, 0.5, -1.5, 0, 0, -1.5, 0, 0.5, -1.5, 0, 0.3536, -1.5, -0.3536, 0, -1.5, 0, 0.3536, -1.5, -0.3536, 0, -1.5, -0.5, 0, -1.5, 0, 0, -1.5, -0.5, -0.3536, -1.5, -0.3536, 0, -1.5, 0, -0.3536, -1.5, -0.3536, -0.5, -1.5, 0, 0, -1.5, 0, -0.5, -1.5, 0, -0.3536, -1.5, 0.3536, 0, -1.5, 0, -0.3536, -1.5, 0.3536, 0, -1.5, 0.5)

[sub_resource type="ConcavePolygonShape3D" id="ConcavePolygonShape3D_65o51"]
data = PackedVector3Array(0, 2.5, 0.5, 0.3536, 2.5, 0.3536, 0, 1.5, 0.5, 0.3536, 2.5, 0.3536, 0.3536, 1.5, 0.3536, 0, 1.5, 0.5, 0.3536, 2.5, 0.3536, 0.5, 2.5, 0, 0.3536, 1.5, 0.3536, 0.5, 2.5, 0, 0.5, 1.5, 0, 0.3536, 1.5, 0.3536, 0.5, 2.5, 0, 0.3536, 2.5, -0.3536, 0.5, 1.5, 0, 0.3536, 2.5, -0.3536, 0.3536, 1.5, -0.3536, 0.5, 1.5, 0, 0.3536, 2.5, -0.3536, 0, 2.5, -0.5, 0.3536, 1.5, -0.3536, 0, 2.5, -0.5, 0, 1.5, -0.5, 0.3536, 1.5, -0.3536, 0, 2.5, -0.5, -0.3536, 2.5, -0.3536, 0, 1.5, -0.5, -0.3536, 2.5, -0.3536, -0.3536, 1.5, -0.3536, 0, 1.5, -0.5, -0.3536, 2.5, -0.3536, -0.5, 2.5, 0, -0.3536, 1.5, -0.3536, -0.5, 2.5, 0, -0.5, 1.5, 0, -0.3536, 1.5, -0.3536, -0.5, 2.5, 0, -0.3536, 2.5, 0.3536, -0.5, 1.5, 0, -0.3536, 2.5, 0.3536, -0.3536, 1.5, 0.3536, -0.5, 1.5, 0, -0.3536, 2.5, 0.3536, 0, 2.5, 0.5, -0.3536, 1.5, 0.3536, 0, 2.5, 0.5, 0, 1.5, 0.5, -0.3536, 1.5, 0.3536, 0, 1.5, 0.5, 0.3536, 1.5, 0.3536, 0, 0.5, 0.5, 0.3536, 1.5, 0.3536, 0.3536, 0.5, 0.3536, 0, 0.5, 0.5, 0.3536, 1.5, 0.3536, 0.5, 1.5, 0, 0.3536, 0.5, 0.3536, 0.5, 1.5, 0, 0.5, 0.5, 0, 0.3536, 0.5, 0.3536, 0.5, 1.5, 0, 0.3536, 1.5, -0.3536, 0.5, 0.5, 0, 0.3536, 1.5, -0.3536, 0.3536, 0.5, -0.3536, 0.5, 0.5, 0, 0.3536, 1.5, -0.3536, 0, 1.5, -0.5, 0.3536, 0.5, -0.3536, 0, 1.5, -0.5, 0, 0.5, -0.5, 0.3536, 0.5, -0.3536, 0, 1.5, -0.5, -0.3536, 1.5, -0.3536, 0, 0.5, -0.5, -0.3536, 1.5, -0.3536, -0.3536, 0.5, -0.3536, 0, 0.5, -0.5, -0.3536, 1.5, -0.3536, -0.5, 1.5, 0, -0.3536, 0.5, -0.3536, -0.5, 1.5, 0, -0.5, 0.5, 0, -0.3536, 0.5, -0.3536, -0.5, 1.5, 0, -0.3536, 1.5, 0.3536, -0.5, 0.5, 0, -0.3536, 1.5, 0.3536, -0.3536, 0.5, 0.3536, -0.5, 0.5, 0, -0.3536, 1.5, 0.3536, 0, 1.5, 0.5, -0.3536, 0.5, 0.3536, 0, 1.5, 0.5, 0, 0.5, 0.5, -0.3536, 0.5, 0.3536, 0, 0.5, 0.5, 0.3536, 0.5, 0.3536, 0, -0.5, 0.5, 0.3536, 0.5, 0.3536, 0.3536, -0.5, 0.3536, 0, -0.5, 0.5, 0.3536, 0.5, 0.3536, 0.5, 0.5, 0, 0.3536, -0.5, 0.3536, 0.5, 0.5, 0, 0.5, -0.5, 0, 0.3536, -0.5, 0.3536, 0.5, 0.5, 0, 0.3536, 0.5, -0.3536, 0.5, -0.5, 0, 0.3536, 0.5, -0.3536, 0.3536, -0.5, -0.3536, 0.5, -0.5, 0, 0.3536, 0.5, -0.3536, 0, 0.5, -0.5, 0.3536, -0.5, -0.3536, 0, 0.5, -0.5, 0, -0.5, -0.5, 0.3536, -0.5, -0.3536, 0, 0.5, -0.5, -0.3536, 0.5, -0.3536, 0, -0.5, -0.5, -0.3536, 0.5, -0.3536, -0.3536, -0.5, -0.3536, 0, -0.5, -0.5, -0.3536, 0.5, -0.3536, -0.5, 0.5, 0, -0.3536, -0.5, -0.3536, -0.5, 0.5, 0, -0.5, -0.5, 0, -0.3536, -0.5, -0.3536, -0.5, 0.5, 0, -0.3536, 0.5, 0.3536, -0.5, -0.5, 0, -0.3536, 0.5, 0.3536, -0.3536, -0.5, 0.3536, -0.5, -0.5, 0, -0.3536, 0.5, 0.3536, 0, 0.5, 0.5, -0.3536, -0.5, 0.3536, 0, 0.5, 0.5, 0, -0.5, 0.5, -0.3536, -0.5, 0.3536, 0, -0.5, 0.5, 0.3536, -0.5, 0.3536, 0, -1.5, 0.5, 0.3536, -0.5, 0.3536, 0.3536, -1.5, 0.3536, 0, -1.5, 0.5, 0.3536, -0.5, 0.3536, 0.5, -0.5, 0, 0.3536, -1.5, 0.3536, 0.5, -0.5, 0, 0.5, -1.5, 0, 0.3536, -1.5, 0.3536, 0.5, -0.5, 0, 0.3536, -0.5, -0.3536, 0.5, -1.5, 0, 0.3536, -0.5, -0.3536, 0.3536, -1.5, -0.3536, 0.5, -1.5, 0, 0.3536, -0.5, -0.3536, 0, -0.5, -0.5, 0.3536, -1.5, -0.3536, 0, -0.5, -0.5, 0, -1.5, -0.5, 0.3536, -1.5, -0.3536, 0, -0.5, -0.5, -0.3536, -0.5, -0.3536, 0, -1.5, -0.5, -0.3536, -0.5, -0.3536, -0.3536, -1.5, -0.3536, 0, -1.5, -0.5, -0.3536, -0.5, -0.3536, -0.5, -0.5, 0, -0.3536, -1.5, -0.3536, -0.5, -0.5, 0, -0.5, -1.5, 0, -0.3536, -1.5, -0.3536, -0.5, -0.5, 0, -0.3536, -0.5, 0.3536, -0.5, -1.5, 0, -0.3536, -0.5, 0.3536, -0.3536, -1.5, 0.3536, -0.5, -1.5, 0, -0.3536, -0.5, 0.3536, 0, -0.5, 0.5, -0.3536, -1.5, 0.3536, 0, -0.5, 0.5, 0, -1.5, 0.5, -0.3536, -1.5, 0.3536, 0, -1.5, 0.5, 0.3536, -1.5, 0.3536, 0, -2.5, 0.5, 0.3536, -1.5, 0.3536, 0.3536, -2.5, 0.3536, 0, -2.5, 0.5, 0.3536, -1.5, 0.3536, 0.5, -1.5, 0, 0.3536, -2.5, 0.3536, 0.5, -1.5, 0, 0.5, -2.5, 0, 0.3536, -2.5, 0.3536, 0.5, -1.5, 0, 0.3536, -1.5, -0.3536, 0.5, -2.5, 0, 0.3536, -1.5, -0.3536, 0.3536, -2.5, -0.3536, 0.5, -2.5, 0, 0.3536, -1.5, -0.3536, 0, -1.5, -0.5, 0.3536, -2.5, -0.3536, 0, -1.5, -0.5, 0, -2.5, -0.5, 0.3536, -2.5, -0.3536, 0, -1.5, -0.5, -0.3536, -1.5, -0.3536, 0, -2.5, -0.5, -0.3536, -1.5, -0.3536, -0.3536, -2.5, -0.3536, 0, -2.5, -0.5, -0.3536, -1.5, -0.3536, -0.5, -1.5, 0, -0.3536, -2.5, -0.3536, -0.5, -1.5, 0, -0.5, -2.5, 0, -0.3536, -2.5, -0.3536, -0.5, -1.5, 0, -0.3536, -1.5, 0.3536, -0.5, -2.5, 0, -0.3536, -1.5, 0.3536, -0.3536, -2.5, 0.3536, -0.5, -2.5, 0, -0.3536, -1.5, 0.3536, 0, -1.5, 0.5, -0.3536, -2.5, 0.3536, 0, -1.5, 0.5, 0, -2.5, 0.5, -0.3536, -2.5, 0.3536, 0, 2.5, 0, 0.3536, 2.5, 0.3536, 0, 2.5, 0.5, 0, 2.5, 0, 0.5, 2.5, 0, 0.3536, 2.5, 0.3536, 0, 2.5, 0, 0.3536, 2.5, -0.3536, 0.5, 2.5, 0, 0, 2.5, 0, 0, 2.5, -0.5, 0.3536, 2.5, -0.3536, 0, 2.5, 0, -0.3536, 2.5, -0.3536, 0, 2.5, -0.5, 0, 2.5, 0, -0.5, 2.5, 0, -0.3536, 2.5, -0.3536, 0, 2.5, 0, -0.3536, 2.5, 0.3536, -0.5, 2.5, 0, 0, 2.5, 0, 0, 2.5, 0.5, -0.3536, 2.5, 0.3536, 0, -2.5, 0, 0, -2.5, 0.5, 0.3536, -2.5, 0.3536, 0, -2.5, 0, 0.3536, -2.5, 0.3536, 0.5, -2.5, 0, 0, -2.5, 0, 0.5, -2.5, 0, 0.3536, -2.5, -0.3536, 0, -2.5, 0, 0.3536, -2.5, -0.3536, 0, -2.5, -0.5, 0, -2.5, 0, 0, -2.5, -0.5, -0.3536, -2.5, -0.3536, 0, -2.5, 0, -0.3536, -2.5, -0.3536, -0.5, -2.5, 0, 0, -2.5, 0, -0.5, -2.5, 0, -0.3536, -2.5, 0.3536, 0, -2.5, 0, -0.3536, -2.5, 0.3536, 0, -2.5, 0.5)

[sub_resource type="BoxMesh" id="82"]
material = ExtResource("3")
size = Vector3(12, 3, 1)
subdivide_height = 1

[sub_resource type="BoxMesh" id="1"]
material = ExtResource("2")
size = Vector3(1.5, 1, 1.5)

[sub_resource type="ConcavePolygonShape3D" id="ConcavePolygonShape3D_mxx5b"]
data = PackedVector3Array(-0.75, 0.5, 0.75, 0.75, 0.5, 0.75, -0.75, -0.5, 0.75, 0.75, 0.5, 0.75, 0.75, -0.5, 0.75, -0.75, -0.5, 0.75, 0.75, 0.5, -0.75, -0.75, 0.5, -0.75, 0.75, -0.5, -0.75, -0.75, 0.5, -0.75, -0.75, -0.5, -0.75, 0.75, -0.5, -0.75, 0.75, 0.5, 0.75, 0.75, 0.5, -0.75, 0.75, -0.5, 0.75, 0.75, 0.5, -0.75, 0.75, -0.5, -0.75, 0.75, -0.5, 0.75, -0.75, 0.5, -0.75, -0.75, 0.5, 0.75, -0.75, -0.5, -0.75, -0.75, 0.5, 0.75, -0.75, -0.5, 0.75, -0.75, -0.5, -0.75, 0.75, 0.5, 0.75, -0.75, 0.5, 0.75, 0.75, 0.5, -0.75, -0.75, 0.5, 0.75, -0.75, 0.5, -0.75, 0.75, 0.5, -0.75, -0.75, -0.5, 0.75, 0.75, -0.5, 0.75, -0.75, -0.5, -0.75, 0.75, -0.5, 0.75, 0.75, -0.5, -0.75, -0.75, -0.5, -0.75)

[node name="World" type="Node3D"]

[node name="HunterGodot" parent="." instance=ExtResource("1")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0.945422, 0.120462, -8.55003)
walk_speed = 1.2

[node name="Skeleton3D" parent="HunterGodot" index="1"]
bones/0/position = Vector3(1.46231, 96.1067, 0.910056)
bones/0/rotation = Quaternion(0.66911, -0.277238, 0.348662, 0.594867)
bones/2/rotation = Quaternion(0.388829, 0.834688, 0.349235, 0.173616)
bones/4/rotation = Quaternion(-0.319796, 0.161621, -0.0460062, 0.932466)
bones/5/rotation = Quaternion(0.458393, -0.0684697, -0.0575108, 0.88424)
bones/6/rotation = Quaternion(0.307208, 0.0130232, -0.0457119, 0.950455)
bones/7/rotation = Quaternion(-0.670147, 0.00974339, -0.0290582, 0.741595)
bones/8/rotation = Quaternion(0.00728243, 0.0508777, -0.0341504, 0.998094)
bones/9/rotation = Quaternion(-0.0958581, 0.0541623, -0.0287016, 0.993506)
bones/10/rotation = Quaternion(0.143023, 0.108215, -0.011485, 0.983719)
bones/14/rotation = Quaternion(-0.0504219, 0.205091, -0.0474481, 0.976291)
bones/19/rotation = Quaternion(0.590071, 0.395655, -0.495299, 0.499953)
bones/20/rotation = Quaternion(0.401064, -0.021382, -0.0991297, 0.91042)
bones/21/rotation = Quaternion(0.0974427, -0.132847, 0.225307, 0.960257)
bones/22/rotation = Quaternion(-0.0497149, 0.0879161, -0.0581047, 0.993188)
bones/23/rotation = Quaternion(0.0910555, 0.293746, 0.290113, 0.906232)
bones/24/rotation = Quaternion(0.0670245, -0.104355, -0.0251008, 0.991962)
bones/25/rotation = Quaternion(0.0268715, -0.0092252, 0.000991484, 0.999596)
bones/26/rotation = Quaternion(0.095978, 0.00948248, 0.10609, 0.989668)
bones/27/rotation = Quaternion(0.066126, 0.00166504, 0.0054561, 0.997795)
bones/28/rotation = Quaternion(0.0918731, 0.00140199, 0.00885933, 0.99573)
bones/29/rotation = Quaternion(0.203562, 0.0183266, 0.031195, 0.978393)
bones/30/rotation = Quaternion(0.136372, 0.00640162, 0.0151556, 0.990521)
bones/31/rotation = Quaternion(0.167103, 0.00841224, 0.0147043, 0.985794)
bones/32/rotation = Quaternion(0.308015, 0.0226093, 0.00400367, 0.951104)
bones/33/rotation = Quaternion(0.194496, -0.00374257, 0.019539, 0.980702)
bones/34/rotation = Quaternion(0.220843, -0.00451575, 0.0207488, 0.975078)
bones/35/rotation = Quaternion(0.422525, 0.019889, 0.0474869, 0.904888)
bones/36/rotation = Quaternion(0.189858, -0.00595074, 0.0136279, 0.981699)
bones/37/rotation = Quaternion(0.340193, -0.0180395, 0.0232163, 0.939896)
bones/38/rotation = Quaternion(0.59483, -0.370658, 0.411863, 0.582373)
bones/39/rotation = Quaternion(0.442457, 0.0479462, 0.416898, 0.792546)
bones/40/rotation = Quaternion(0.0931832, 0.0281798, -0.480197, 0.871742)
bones/41/rotation = Quaternion(0.125738, -0.0941687, -0.121881, 0.980034)
bones/42/rotation = Quaternion(0.0343326, -0.571612, -0.294586, 0.765049)
bones/43/rotation = Quaternion(0.0566775, 0.108539, 0.0264929, 0.992122)
bones/44/rotation = Quaternion(0.0943892, 0.0468211, 0.189447, 0.976221)
bones/45/rotation = Quaternion(0.297323, -0.0961442, -0.117007, 0.94269)
bones/46/rotation = Quaternion(0.565085, -0.0301125, -0.0298452, 0.823943)
bones/47/rotation = Quaternion(0.515995, -0.0194863, -0.0298242, 0.855851)
bones/48/rotation = Quaternion(0.367536, -0.0372059, -0.0945263, 0.924445)
bones/49/rotation = Quaternion(0.560916, -0.0126829, -0.0417962, 0.82672)
bones/50/rotation = Quaternion(0.350416, 0.000410283, -0.0292705, 0.936137)
bones/51/rotation = Quaternion(0.475377, -0.00909777, -0.115889, 0.872069)
bones/52/rotation = Quaternion(0.406168, -0.00235009, -0.029171, 0.91333)
bones/53/rotation = Quaternion(0.45066, -0.00230977, -0.0276615, 0.892264)
bones/54/rotation = Quaternion(0.398478, 0.0689279, -0.0480458, 0.913321)
bones/55/rotation = Quaternion(0.386979, -0.00326015, -0.0234153, 0.921785)
bones/56/rotation = Quaternion(0.216036, 0.00185066, -0.0144624, 0.976277)
bones/57/rotation = Quaternion(-0.192748, 0.841049, 0.498023, 0.0863607)
bones/59/rotation = Quaternion(-0.380852, -0.0395171, -0.0207782, 0.923558)
bones/60/rotation = Quaternion(0.639963, 0.0739305, 0.182528, 0.742742)
bones/61/rotation = Quaternion(0.28234, 0.0145441, 0.0256598, 0.958861)

[node name="Bone-Cape" parent="HunterGodot/Skeleton3D" index="6"]
transform = Transform3D(0.603148, -0.785819, 0.136746, 0.0438088, -0.138545, -0.989387, 0.796425, 0.602737, -0.0491372, 1.46231, 96.1067, 0.910049)

[node name="SoftBody" parent="HunterGodot/Skeleton3D/Bone-Cape" index="0"]
attachments/0/offset = Vector3(-7.87972, -4.01237, 3.54049)
attachments/1/offset = Vector3(-5.44306, -3.84827, 3.64565)
attachments/2/offset = Vector3(-3.00639, -3.68418, 3.7508)
attachments/3/offset = Vector3(-0.56973, -3.52009, 3.85595)
attachments/4/offset = Vector3(1.86693, -3.356, 3.9611)
attachments/5/offset = Vector3(6.74026, -3.02781, 4.1714)
attachments/6/offset = Vector3(4.3036, -3.1919, 4.06625)
attachments/7/offset = Vector3(9.17692, -2.86372, 4.27655)
attachments/8/offset = Vector3(6.81564, -5.32394, 6.00792)
attachments/9/offset = Vector3(4.37897, -5.48803, 5.90277)
attachments/10/offset = Vector3(1.94231, -5.65213, 5.79761)
attachments/11/offset = Vector3(-0.494353, -5.81622, 5.69246)
attachments/12/offset = Vector3(-2.93102, -5.98031, 5.58731)
attachments/13/offset = Vector3(-5.36768, -6.14441, 5.48216)
attachments/14/offset = Vector3(-10.3164, -4.17646, 3.43534)
attachments/15/offset = Vector3(11.6136, -2.69962, 4.3817)

[node name="Bone-Hand" parent="HunterGodot/Skeleton3D" index="7"]
transform = Transform3D(-0.162177, -0.561082, 0.811717, 0.606149, -0.705755, -0.366733, 0.778641, 0.432545, 0.454557, -43.6564, 92.3212, -15.622)

[node name="Ax_GodotHunter2" parent="HunterGodot/Skeleton3D/Bone-Hand/AxHandle" index="0"]
surface_material_override/0 = null

[node name="AnimationTree" parent="HunterGodot" index="2"]
parameters/playback = SubResource("AnimationNodeStateMachinePlayback_wah1s")

[node name="Camera3D" parent="HunterGodot/Camroot/h/v" index="0"]
effects = SubResource("CameraEffects_rgh32")
far = 300.0

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = SubResource("Environment_jd42k")

[node name="DirectionalLight" type="DirectionalLight3D" parent="."]
transform = Transform3D(0.826721, -0.06791, -0.558498, 0.0869323, 0.996186, 0.00755195, 0.555855, -0.0547949, 0.829471, -5.94147, 4.66911, 12.5543)
light_color = Color(0.827451, 0.427451, 0.231373, 1)
light_energy = 2.909
light_indirect_energy = 1.519
shadow_enabled = true
shadow_bias = 2.308

[node name="Pilars" type="Node3D" parent="."]

[node name="CSGCombiner3D" type="CSGCombiner3D" parent="Pilars"]
use_collision = true

[node name="LoPilar" type="CSGMesh3D" parent="Pilars/CSGCombiner3D"]
transform = Transform3D(1.5, 0, 0, 0, 1.5, 0, 0, 0, 1.5, 3.5201, 1.72299, 11.0674)
mesh = SubResource("3")

[node name="LoPilar2" type="CSGMesh3D" parent="Pilars/CSGCombiner3D"]
transform = Transform3D(1.5, 0, 0, 0, 1.5, 0, 0, 0, 1.5, -2.85815, 1.72299, 11.0674)
mesh = SubResource("3")

[node name="MidPilar" type="CSGMesh3D" parent="Pilars/CSGCombiner3D"]
transform = Transform3D(1.5, 0, 0, 0, 1.5, 0, 0, 0, 1.5, 3.6283, 2.22217, 6.70886)
mesh = SubResource("10")

[node name="MidPilar2" type="MeshInstance3D" parent="Pilars/CSGCombiner3D"]
transform = Transform3D(-5.71027e-08, 1.30636, -0.737177, -1.5, -6.55671e-08, 3.19744e-14, -3.2223e-08, 0.737177, 1.30636, -2.79767, 1.29646, 5.73347)
mesh = SubResource("10")

[node name="StaticBody3D" type="StaticBody3D" parent="Pilars/CSGCombiner3D/MidPilar2"]

[node name="CollisionShape3D" type="CollisionShape3D" parent="Pilars/CSGCombiner3D/MidPilar2/StaticBody3D"]
shape = SubResource("ConcavePolygonShape3D_gyltu")

[node name="HiPilar" type="CSGMesh3D" parent="Pilars/CSGCombiner3D"]
transform = Transform3D(1.5, 0, 0, 0, 1.5, 0, 0, 0, 1.5, 3.64355, 2.22217, 2.91001)
mesh = SubResource("15")

[node name="HiPilar2" type="MeshInstance3D" parent="Pilars/CSGCombiner3D"]
transform = Transform3D(1.36442, 0.0556336, -0.620694, -0.55702, 0.778792, -1.15465, 0.279436, 1.28078, 0.729059, -2.76321, 2.38572, 5.60854)
mesh = SubResource("15")

[node name="StaticBody3D" type="StaticBody3D" parent="Pilars/CSGCombiner3D/HiPilar2"]

[node name="CollisionShape3D" type="CollisionShape3D" parent="Pilars/CSGCombiner3D/HiPilar2/StaticBody3D"]
shape = SubResource("ConcavePolygonShape3D_t2hng")

[node name="LoPilar3" type="CSGMesh3D" parent="Pilars/CSGCombiner3D"]
transform = Transform3D(-1.5, 0, -2.26494e-07, 0, 1.5, 0, 2.26494e-07, 0, -1.5, -2.73471, 1.72299, -11.5207)
mesh = SubResource("3")

[node name="LoPilar4" type="CSGMesh3D" parent="Pilars/CSGCombiner3D"]
transform = Transform3D(-1.5, 0, -2.26494e-07, 0, 1.5, 0, 2.26494e-07, 0, -1.5, 3.64355, 1.72299, -11.5207)
mesh = SubResource("3")

[node name="MidPilar3" type="CSGMesh3D" parent="Pilars/CSGCombiner3D"]
transform = Transform3D(-1.5, 0, -2.26494e-07, 0, 1.5, 0, 2.26494e-07, 0, -1.5, -2.8429, 2.22217, -7.16215)
mesh = SubResource("10")

[node name="MidPilar4" type="CSGMesh3D" parent="Pilars/CSGCombiner3D"]
transform = Transform3D(-1.5, 0, -2.26494e-07, 0, 1.5, 0, 2.26494e-07, 0, -1.5, 3.58307, 2.22217, -7.16215)
mesh = SubResource("10")

[node name="LoPilar5" type="CSGMesh3D" parent="Pilars/CSGCombiner3D"]
transform = Transform3D(-6.55671e-08, 0, -1.5, 0, 1.5, 0, 1.5, 0, -6.55671e-08, -11.0316, 1.72299, 2.77872)
mesh = SubResource("3")

[node name="LoPilar6" type="CSGMesh3D" parent="Pilars/CSGCombiner3D"]
transform = Transform3D(-6.55671e-08, 0, -1.5, 0, 1.5, 0, 1.5, 0, -6.55671e-08, -11.0316, 1.72299, -3.59953)
mesh = SubResource("3")

[node name="MidPilar5" type="CSGMesh3D" parent="Pilars/CSGCombiner3D"]
transform = Transform3D(-6.55671e-08, 0, -1.5, 0, 1.5, 0, 1.5, 0, -6.55671e-08, -6.67308, 2.22217, 2.88692)
mesh = SubResource("10")

[node name="MidPilar6" type="CSGMesh3D" parent="Pilars/CSGCombiner3D"]
transform = Transform3D(-6.55671e-08, 0, -1.5, 0, 1.5, 0, 1.5, 0, -6.55671e-08, -6.67308, 2.22217, -3.53905)
mesh = SubResource("10")

[node name="LoPilar7" type="CSGMesh3D" parent="Pilars/CSGCombiner3D"]
transform = Transform3D(-6.55671e-08, 0, 1.5, 0, 1.5, 0, -1.5, 0, -6.55671e-08, 11.9221, 1.72299, -3.47609)
mesh = SubResource("3")

[node name="LoPilar8" type="CSGMesh3D" parent="Pilars/CSGCombiner3D"]
transform = Transform3D(-6.55671e-08, 0, 1.5, 0, 1.5, 0, -1.5, 0, -6.55671e-08, 11.9221, 1.72299, 2.90217)
mesh = SubResource("3")

[node name="MidPilar7" type="MeshInstance3D" parent="Pilars/CSGCombiner3D"]
transform = Transform3D(-9.21809e-08, -1.16925, 0.9396, 1.5, -6.55671e-08, 6.55671e-08, -1.00385e-08, 0.9396, 1.16925, 7.56361, 1.18263, -2.09358)
mesh = SubResource("10")

[node name="StaticBody3D" type="StaticBody3D" parent="Pilars/CSGCombiner3D/MidPilar7"]

[node name="CollisionShape3D" type="CollisionShape3D" parent="Pilars/CSGCombiner3D/MidPilar7/StaticBody3D"]
shape = SubResource("ConcavePolygonShape3D_1l8u4")

[node name="MidPilar8" type="MeshInstance3D" parent="Pilars/CSGCombiner3D"]
transform = Transform3D(-3.12925e-08, 0.640493, 1.35638, 1.5, -6.55671e-08, 6.55671e-08, 8.72861e-08, 1.35638, -0.640493, 7.56361, 1.20636, 2.84169)
mesh = SubResource("10")

[node name="StaticBody3D" type="StaticBody3D" parent="Pilars/CSGCombiner3D/MidPilar8"]

[node name="CollisionShape3D" type="CollisionShape3D" parent="Pilars/CSGCombiner3D/MidPilar8/StaticBody3D"]
shape = SubResource("ConcavePolygonShape3D_t1rws")

[node name="HiPilar3" type="MeshInstance3D" parent="Pilars/CSGCombiner3D"]
transform = Transform3D(1.03117, 1.00878, -0.411146, 0.555544, -2.42836e-08, 1.39333, 0.937046, -1.11012, -0.373616, -2.85815, 1.16387, -3.3633)
mesh = SubResource("15")

[node name="StaticBody3D" type="StaticBody3D" parent="Pilars/CSGCombiner3D/HiPilar3"]

[node name="CollisionShape3D" type="CollisionShape3D" parent="Pilars/CSGCombiner3D/HiPilar3/StaticBody3D"]
shape = SubResource("ConcavePolygonShape3D_65o51")

[node name="HiPilar4" type="CSGMesh3D" parent="Pilars/CSGCombiner3D"]
transform = Transform3D(-1.5, 0, -2.26494e-07, 0, 1.5, 0, 2.26494e-07, 0, -1.5, 3.54861, 2.22217, -3.3633)
mesh = SubResource("15")

[node name="Wall" type="CSGMesh3D" parent="Pilars/CSGCombiner3D"]
transform = Transform3D(1.5, 0, 0, 0, 1.5, 0, 0, 0, 1.5, 7.14111, 2.22217, 13.1432)
mesh = SubResource("82")

[node name="Wall5" type="CSGMesh3D" parent="Pilars/CSGCombiner3D"]
transform = Transform3D(1.44194, -9.4587e-09, 0.41328, -0.41328, -6.73319e-08, 1.44194, 9.4587e-09, -1.5, -6.73319e-08, -12.0999, 2.63892, 12.0046)
mesh = SubResource("82")

[node name="Wall2" type="CSGMesh3D" parent="Pilars/CSGCombiner3D"]
transform = Transform3D(1.5, 0, 0, 0, 1.5, 0, 0, 0, 1.5, -9.03152, 2.22217, -15.748)
mesh = SubResource("82")

[node name="Wall3" type="CSGMesh3D" parent="Pilars/CSGCombiner3D"]
transform = Transform3D(-6.55671e-08, 0, 1.5, 0, 1.5, 0, -1.5, 0, -6.55671e-08, 14.0589, 2.22217, -6.6766)
mesh = SubResource("82")

[node name="Wall4" type="CSGMesh3D" parent="Pilars/CSGCombiner3D"]
transform = Transform3D(-6.55671e-08, 0, 1.5, 0, 1.5, 0, -1.5, 0, -6.55671e-08, -18.0822, 2.22217, 10.0673)
mesh = SubResource("82")

[node name="MeshInstanceFloor" type="MeshInstance3D" parent="."]
transform = Transform3D(25, 0, 0, 0, 1, 0, 0, 0, 25, 0, -0.496773, 0)
mesh = SubResource("1")

[node name="StaticBody3D" type="StaticBody3D" parent="MeshInstanceFloor"]

[node name="CollisionShape3D" type="CollisionShape3D" parent="MeshInstanceFloor/StaticBody3D"]
shape = SubResource("ConcavePolygonShape3D_mxx5b")

[editable path="HunterGodot"]
